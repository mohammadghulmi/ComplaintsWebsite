{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\FEassignment-main\\\\FEassignment-main\\\\ticket\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport { useRef } from \"react\";\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { useSelector, connect } from \"react-redux\";\nimport { createStore } from 'redux';\nimport { render } from '@testing-library/react';\nimport { ADD_Ticket, change_status, Enable_pro, goal_dis, intial, send_message } from \"./actionTypes\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent'; //define variables used in project\n\nvar ticketname = \"\";\nvar selected = \"\";\nvar RecentMessage = \"\";\nvar messages = [\"\", \"\", \"\"]; //set intial state of project\n\nvar initialState = {\n  id: 0,\n  title: \"New Task\",\n  asignee: \"mohammad\",\n  status: \"new\",\n  Goal: \"\",\n  proceed: true,\n  text_Length: 25,\n  conversation: true,\n  Message: RecentMessage\n}; //defune the reducer that will manage the project state\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    //define the state at the start of application\n    case ADD_Ticket:\n      {\n        return { ...state,\n          id: 1,\n          title: ticketname,\n          Goal: selected,\n          conversation: false,\n          Message: RecentMessage\n        };\n      }\n    //checks if the text inputed is valid and under 25 letters to enable the proceed button\n\n    case Enable_pro:\n      {\n        var x = ticketname.length;\n\n        if (ticketname.length >= 1 && ticketname.length <= 25) {\n          return { ...state,\n            title: ticketname,\n            text_Length: ticketname.length,\n            proceed: false\n          };\n        } else {\n          return { ...state,\n            text_Length: x,\n            proceed: true\n          };\n        }\n      }\n    // just setting the intial state\n\n    case intial:\n      {\n        return { ...state\n        };\n      }\n    //define that the type of the complaint has been set\n\n    case goal_dis:\n      {\n        return { ...state,\n          Goal: selected\n        };\n      }\n    //set that the message has been sent\n\n    case send_message:\n      {\n        return { ...state,\n          Message: RecentMessage //problems:[...problems,{Message:RecentMessage}]\n\n        };\n      }\n  }\n} //dispatchers for the reducer\n\n\nconst ADDTicket = () => {\n  return {\n    type: ADD_Ticket\n  };\n};\n\n_c = ADDTicket;\n\nconst EnablePro = () => {\n  return {\n    type: Enable_pro\n  };\n};\n\n_c2 = EnablePro;\n\nconst Intial = () => {\n  return {\n    type: intial\n  };\n};\n\n_c3 = Intial;\n\nconst Goaldis = () => {\n  return {\n    type: goal_dis\n  };\n};\n\n_c4 = Goaldis;\n\nconst Send_message = () => {\n  return {\n    type: send_message\n  };\n};\n\n_c5 = Send_message;\n\nfunction Map() {\n  _s();\n\n  const title1 = useSelector(state => state.title);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: title1\n  }, void 0, false);\n}\n\n_s(Map, \"dT0ufRsYLc11R4mUXgXtsHBNd5k=\", false, function () {\n  return [useSelector];\n});\n\n_c6 = Map;\nconst Store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Complaint title\",\n      text_length: 25,\n      proceed: true,\n      Proceedselect: false,\n      conv: true,\n      Msg: \"\",\n      MsgnotSent: true,\n      info: \"\"\n    };\n\n    this.delta = event => {\n      ticketname = event.target.value;\n      Store.dispatch(EnablePro());\n      var y = select(Store.getState());\n      var pro = Store.getState().proceed;\n      this.setState({\n        text_Length: 25 - y,\n        proceed: pro\n      });\n    };\n\n    this.handleButton = event => {\n      var goal = Store.getState().Goal;\n\n      if (goal = !\"\") {\n        Store.dispatch(ADDTicket());\n        var conv = Store.getState().conversation;\n        var name = Store.getState().title;\n        this.setState({\n          title: name,\n          conv: conv\n        });\n      }\n    };\n\n    this.handleList = event => {\n      selected = event.target.value;\n      Store.dispatch(Goaldis());\n    };\n\n    this._handleKeyDown = event => {\n      if (event.key === 'Enter') {\n        RecentMessage = event.target.value;\n\n        if (RecentMessage !== \"\") {\n          Store.dispatch(Send_message());\n          this.setState({\n            Msg: RecentMessage,\n            MsgnotSent: false,\n            conv: true,\n            info: \"PLease wait for support to respond to your message\"\n          });\n        }\n      }\n    };\n  } //intial state of the component\n\n\n  //sets the intial state \n  componentDidMount() {\n    Store.dispatch(Intial());\n    var x = select(Store.getState());\n    this.setState({\n      text_Length: x\n    });\n  }\n\n  render() {\n    const update = () => {\n      var x = select(Store.getState());\n      this.setState({\n        text_Length: x\n      });\n    }; //the design of the page\n\n\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: Store,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskbar\",\n            children: /*#__PURE__*/_jsxDEV(\"text\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"classify\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"header\",\n              children: \"Complaint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"classifytext\",\n              children: \"What is your problem?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"\",\n              native: true,\n              label: \"Problem\",\n              onChange: this.handleList,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Need a refund\",\n                children: \"Need a refund\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Cancel an account\",\n                children: \"Cancel an account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: true,\n                value: \"Payment issue\",\n                children: \"Payment issue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"delivery issue\",\n                children: \"Delivery issue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"classifytext\",\n              children: \"Briefly describe your problem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Problem\",\n              id: \"name\",\n              name: \"name\",\n              className: \"select\",\n              onChange: this.delta\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"padd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              className: \"classifytext\",\n              children: \"Characters left: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              style: {\n                color: this.state.text_Length < 0 ? \"red\" : \"green\"\n              },\n              children: this.state.text_Length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonDIV\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: this.state.proceed,\n                variant: \"outlined\",\n                size: \"large\",\n                color: \"primary\",\n                onClick: this.handleButton,\n                children: \"proceed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: /*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"ticketname\",\n              children: this.state.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"padd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"padd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"root\",\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              disabled: this.state.MsgnotSent,\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: this.state.Msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Labelalert\",\n              disabled: this.state.MsgnotSent,\n              children: this.state.info\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"msginputdiv\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-full-width\",\n              label: \"Message\",\n              style: {\n                margin: 8\n              },\n              placeholder: \"Type your message to support\",\n              fullWidth: true,\n              margin: \"normal\",\n              InputLabelProps: {\n                shrink: true\n              },\n              disabled: this.state.conv,\n              onKeyDown: this._handleKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nconnect(mapStateToProps)(App);\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ADDTicket\");\n$RefreshReg$(_c2, \"EnablePro\");\n$RefreshReg$(_c3, \"Intial\");\n$RefreshReg$(_c4, \"Goaldis\");\n$RefreshReg$(_c5, \"Send_message\");\n$RefreshReg$(_c6, \"Map\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/FEassignment-main/FEassignment-main/ticket/src/App.js"],"names":["React","Component","useRef","Provider","useSelector","connect","createStore","render","ADD_Ticket","change_status","Enable_pro","goal_dis","intial","send_message","PropTypes","makeStyles","Button","InputLabel","FormHelperText","FormControl","Select","NativeSelect","TextField","Card","CardActions","CardContent","ticketname","selected","RecentMessage","messages","initialState","id","title","asignee","status","Goal","proceed","text_Length","conversation","Message","reducer","state","action","type","x","length","ADDTicket","EnablePro","Intial","Goaldis","Send_message","Map","title1","Store","window","__REDUX_DEVTOOLS_EXTENSION__","App","constructor","props","text_length","Proceedselect","conv","Msg","MsgnotSent","info","delta","event","target","value","dispatch","y","select","getState","pro","setState","handleButton","goal","name","handleList","_handleKeyDown","key","componentDidMount","update","color","margin","shrink","mapStateToProps"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport {useRef} from \"react\";\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport {useSelector,connect} from \"react-redux\";\nimport {createStore} from 'redux';\nimport { render } from '@testing-library/react';\nimport { ADD_Ticket, change_status, Enable_pro,goal_dis,intial,send_message } from \"./actionTypes\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n  //define variables used in project\n  var ticketname=\"\";\n  var selected=\"\";\n  var RecentMessage=\"\";\n  var messages=[\"\",\"\",\"\"];\n  //set intial state of project\n  var initialState = {\n    id: 0,\n    title:\"New Task\",\n    asignee:\"mohammad\",\n    status:\"new\",\n    Goal:\"\",\n    proceed:true,\n    text_Length:25,\n    conversation:true,\n    Message:RecentMessage,\n    \n  };\n\n//defune the reducer that will manage the project state\nfunction reducer(state = initialState,action){\n  switch(action.type){\n    //define the state at the start of application\n    case ADD_Ticket: {\n      return{\n        ...state,\n        id:1,\n        title: ticketname,\n        Goal: selected,\n        conversation: false,\n        Message:RecentMessage,\n        \n      }\n    }\n    //checks if the text inputed is valid and under 25 letters to enable the proceed button\n    case Enable_pro:{\n      var x = ticketname.length;\n        \n        if (ticketname.length>=1&&ticketname.length<=25){\n          return{\n            ...state,\n            title:ticketname,\n            text_Length: ticketname.length,\n            proceed: false\n          }\n        \n        }\n        else{\n          return{\n            ...state,\n            text_Length :x,\n            proceed: true\n          }\n        }\n        \n        \n    }\n    // just setting the intial state\n    case intial:{\n      return{\n        ...state\n      }\n    }\n    //define that the type of the complaint has been set\n    case goal_dis:{\n      return{\n        ...state,\n        Goal: selected\n      }\n    }\n    //set that the message has been sent\n    case send_message:{\n      return{\n        ...state,\n        Message:RecentMessage,\n        //problems:[...problems,{Message:RecentMessage}]\n\n      }\n    }\n\n  }\n}\n//dispatchers for the reducer\nconst ADDTicket = () =>{\n  return{ \n    type : ADD_Ticket\n\n  };\n};\nconst EnablePro = () =>{\n  return{\n    type : Enable_pro\n  };\n};\nconst Intial = () =>{\n  return{\n\n    type : intial\n  };\n};\nconst Goaldis=() =>{\n  return{\n    type : goal_dis\n  }\n}\nconst Send_message= () =>{\n  return{\n    type : send_message\n  }\n}\n\nfunction Map() {\n  const title1 =useSelector(state=>state.title);\n  return <>{title1}</>\n}\n\nconst Store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    \n    \n  }\n  //intial state of the component\n  state={\n    title: \"Complaint title\",\n    text_length:25,\n    proceed:true,\n    Proceedselect:false,\n    conv : true,\n    Msg:\"\",\n    MsgnotSent:true,\n    info:\"\"\n\n  }\n  //delta manages the changes in the text input and dispatches events when changed\n  delta = (event) => {\n    ticketname = event.target.value\n    Store.dispatch(EnablePro());\n    var y =select(Store.getState())\n    var pro= Store.getState().proceed;\n    this.setState({\n        text_Length: 25-y,\n        proceed: pro\n        \n    });\n  }\n  //handles the procees button\n  handleButton = (event) => {\n    var goal = Store.getState().Goal;\n    if(goal=!\"\"){\n      Store.dispatch(ADDTicket());\n      var conv = Store.getState().conversation;\n      var name = Store.getState().title;\n      this.setState({\n        title:name,\n        conv:conv\n      });\n    }\n\n  }\n  //handles list select\n  handleList = (event) => {\n    selected = event.target.value;\n    Store.dispatch(Goaldis());\n  }\n  //sends the message when the user presses enter\n  _handleKeyDown= (event) =>{\n    if (event.key === 'Enter') {\n      RecentMessage= event.target.value;\n      if(RecentMessage!==\"\"){\n        Store.dispatch(Send_message());\n        this.setState({\n          Msg:RecentMessage,\n          MsgnotSent:false,\n          conv:true,\n          info:\"PLease wait for support to respond to your message\"\n        });\n      }\n    }\n\n  }\n  //sets the intial state \n  componentDidMount() {\n    Store.dispatch(Intial());\n    var x = select(Store.getState());\n    this.setState({\n      text_Length:x\n    })\n  }\n  render(){\n    const update =() =>{\n      var x =select(Store.getState());\n      this.setState({\n        text_Length:x\n      }\n      );\n    }\n    //the design of the page\n  return (\n  <Provider store={Store}> \n  <div className=\"full\">\n    <div className=\"row\" >\n      <div className=\"taskbar\">\n        <text></text>\n      </div>\n      \n      <div className=\"classify\">\n        <div className= \"padd\"></div>\n        <header className=\"header\">Complaint</header>\n        <div className= \"padd\"></div>\n        <text className=\"classifytext\">What is your problem?</text>\n        <div className=\"padd\"></div>\n        <Select defaultValue=\"\" native label=\"Problem\" onChange={this.handleList} >\n          <option value=\"\">select</option>\n          <option value=\"Need a refund\">Need a refund</option>\n          <option value=\"Cancel an account\">Cancel an account</option>\n          <option selected value=\"Payment issue\">Payment issue</option>\n          <option value=\"delivery issue\">Delivery issue</option>\n        </Select>\n        <div className=\"padd\"></div>\n        <text className=\"classifytext\">Briefly describe your problem</text>\n        <div className=\"padd\"></div>\n        <TextField label=\"Problem\" id =\"name\" name=\"name\" className=\"select\" onChange={this.delta}></TextField>\n        <div className=\"padd\"></div>\n        <text className=\"classifytext\">Characters left: </text>\n        <text style={{color: this.state.text_Length < 0 ? \"red\" : \"green\" }}>{this.state.text_Length}</text>\n        <div className=\"buttonDIV\">\n        <Button disabled={this.state.proceed} variant=\"outlined\" size=\"large\" color=\"primary\" onClick={this.handleButton}>proceed</Button>\n        </div>\n      </div>\n      <div className=\"message\"><header className=\"ticketname\">{this.state.title}</header></div>\n      \n     <div className=\"padd\"></ div>\n     \n     <div className=\"padd\"></ div>\n     <div className=\"root\"><Card disabled={this.state.MsgnotSent}  variant=\"outlined\">\n      <CardContent>{this.state.Msg}</CardContent>\n      </Card>\n      <label className=\"Labelalert\" disabled={this.state.MsgnotSent}>{this.state.info}</label>\n      </div>\n     <div className=\"msginputdiv\">\n     <TextField\n          id=\"standard-full-width\"\n          label=\"Message\"\n          style={{ margin: 8 }}\n          placeholder=\"Type your message to support\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          disabled={this.state.conv}\n          onKeyDown={this._handleKeyDown}\n        />\n     </div>\n    </div>\n    </div>\n    </Provider> \n  );\n  }\n  \n}\n\n\n connect(mapStateToProps)(App);\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}